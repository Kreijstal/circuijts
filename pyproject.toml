[project]
name = "circuijts"
version = "0.0.1"
description = "Circuit description language parser and validator"
authors = []
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.280",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]

[build-system]
requires = ["hatchling", "pytest-cov"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["circuijt"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.black]
line-length = 127
target-version = ["py38"]

[tool.flake8]
max-line-length = 127
max-complexity = 10
ignore = "E203,E266,E501,W503"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info"
]

[tool.coverage.run]
source = ["circuijt"]

[tool.pylint.format]
max-line-length = 127

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 127
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "A",   # flake8-builtins
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "FBT", # flake8-boolean-trap
    "Q",   # flake8-quotes
    "RUF", # ruff-specific
]
ignore = ["E203", "E501", "W503"]
target-version = "py38"